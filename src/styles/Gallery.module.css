.galleryPage {
  min-height: 100vh;
}

.hero {
  height: 100vh;
  background-size: cover !important;
  background-position: center !important;
  background-repeat: no-repeat !important;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  color: #ffffff;
  padding-top: 80px;
  margin-bottom: 0;
  background-color: #666;
}

.heroWithBg {
  background-image: url("/images/gallery/gallery-landing.jpeg") !important;
}

.hero::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  z-index: 1;
}

.heroContent {
  position: relative;
  z-index: 2;
  max-width: 800px;
  padding: 0 20px;
  animation: fadeIn 1s ease-in;
}

.heroContent h1 {
  font-size: 4rem;
  margin-bottom: 1.5rem;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
  line-height: 1.2;
}

.heroContent p {
  font-size: 1.8rem;
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
  margin-bottom: 2rem;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 20px;
}

.galleryFilters {
  background: #ffffff;
  padding: 5rem 0;
}

.filterButtons {
  display: flex;
  justify-content: center;
  gap: 1rem;
  flex-wrap: wrap;
}

.filterBtn {
  padding: 0.75rem 1.5rem;
  border: 2px solid #3498db;
  background: transparent;
  color: #3498db;
  border-radius: 30px;
  cursor: pointer;
  font-weight: 500;
  transition: all 0.3s ease;
}

.filterBtn:hover,
.filterBtn.active {
  background: #3498db;
  color: #ffffff;
}

.galleryGrid {
  padding: 4rem 0;
  background: #f8f9fa;
}

.imageGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 2rem;
}

.galleryItem {
  cursor: pointer;
  transition: transform 0.3s ease;
}

.galleryItem:hover {
  transform: translateY(-5px);
}

.imageWrapper {
  position: relative;
  aspect-ratio: 4/3;
  overflow: hidden;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.3s ease;
}

.galleryItem:hover .image {
  transform: scale(1.1);
}

.overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.galleryItem:hover .overlay {
  opacity: 1;
}

.overlay span {
  color: #fff;
  font-size: 1.2rem;
  font-weight: 500;
  text-align: center;
  padding: 1rem;
}

@media (max-width: 768px) {
  .heroContent h1 {
    font-size: 2.8rem;
  }

  .heroContent p {
    font-size: 1.4rem;
  }

  .container {
    padding: 0 20px;
  }

  .galleryFilters {
    padding: 3rem 0;
  }

  .filterBtn {
    padding: 0.5rem 1rem;
    font-size: 0.9rem;
  }

  .imageGrid {
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 1rem;
  }
}

/* Additional styles for description and state management */
.description {
  color: white;
  font-size: 0.9rem;
  margin-top: 0.5rem;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  opacity: 0.9;
}

/* Loading, Error, and Empty States */
.loadingState,
.errorState,
.emptyState {
  text-align: center;
  padding: 3rem;
  color: #666;
}

.loadingState p,
.emptyState p {
  font-size: 1.1rem;
  margin: 0;
}

.errorState p {
  font-size: 1.1rem;
  margin: 0 0 1rem 0;
  color: #dc3545;
}

.retryButton {
  background: #007bff;
  color: white;
  border: none;
  padding: 0.75rem 1.5rem;
  border-radius: 8px;
  cursor: pointer;
  font-size: 1rem;
  transition: background-color 0.2s;
}

.retryButton:hover {
  background: #0056b3;
}
